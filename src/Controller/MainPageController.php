<?php

namespace App\Controller;

use App\Entity\Student;
use App\Entity\User;
use App\Repository\StudentRepository;
use Doctrine\Persistence\ManagerRegistry;
use Faker\Factory;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class MainPageController extends AbstractController
{
    public function index(): Response
    {
        $user = $this->getUser();
        if($user == null){
            return $this->redirectToRoute('login');
        }
        return $this->render('main_page/index.html.twig', [
            'controller_name' => 'домашняя страница',
        ]);
    }

    public function students(Request $request)
    {
        $groupName = $this->getGroupNumber($request->get('group_name'));
        $url = $request->headers->get('referer');
        $students = $this->getDoctrine()
            ->getRepository(Student::class)
            ->findBy(array('group_number' => $groupName));
        return $this->render('students/index.html.twig',
        [
            'group' => $groupName,
            'students' => $students,
            'url' => $url
        ]);
    }

    public function getGroupNumber($groupNumber)
    {
        $groups = [
            'MT-101' => 'MT-101',
            'MT-102' => 'MT-102',
            'MP-101' => 'MП-101',
            'MP-102' => 'MП-102',
            'MN-101' => 'MН-101',
            'MN-102' => 'MН-102',
            'MK-101' => 'MК-101',
            'MK-102' => 'MК-102',
        ];
        return $groups[$groupNumber];
    }

    public function fakeUsers(ManagerRegistry $doctrine){
        //$faker = Factory::create('ru_RU'); $faker->name
        $entityManager = $doctrine->getManager();
        $names = ['Агапов Даниил', 'Агафонова Яна', 'Агафонова Виктория', 'Алексеева Александра',
            'Алексеева Варвара', 'Андреева Маргарита', 'Андреева Диана', 'Аникина Алёна', 'Антонов Андрей',
            'Антонов Тимофей', 'Афанасьева Екатерина', 'Баженов Тимур', 'Безрукова Дарья', 'Белова Варвара',
            'Белоусов Максим', 'Беляев Даниил', 'Беляев Тимур', 'Бобров Ярослав', 'Богданов Лев', 'Богданова София',
            'Богданова Карина', 'Болдырев Денис', 'Борисов Максим', 'Борисова Василиса', 'Бочарова Виктория', 'Васильев Максим',
            'Васильев Александр', 'Васильев Константин', 'Вешнякова Полина', 'Виноградов Иван', 'Виноградова Варвара',
            'Вишневский Даниил', 'Владимиров Иван', 'Власов Матвей', 'Волкова Анастасия', 'Воробьев Тимур', 'Воробьева Дарья',
            'Гаврилов Фёдор', 'Галкин Илья', 'Галкин Евгений', 'Герасимов Егор', 'Горбачев Кирилл', 'Грачева Мария', 'Греков Владимир',
            'Григорьева Виктория', 'Гурова Мария', 'Гусев Михаил', 'Гусев Артём', 'Давыдова Мирослава', 'Денисова Лилия', 'Дмитриева Арина',
            'Дмитриева Анна', 'Дорофеев Лука', 'Дорофеев Виктор', 'Егоров Даниил', 'Егоров Артём', 'Емельянов Николай', 'Ермаков Семён',
            'Жуков Денис', 'Жукова Алина', 'Журавлев Борис', 'Завьялов Иван', 'Звягинцева Виктория', 'Зиновьев Иван', 'Зубова Варвара',
            'Иванов Святослав', 'Иванов Михаил', 'Иванов Александр', 'Иванов Дмитрий', 'Иванов Андрей', 'Иванов Савва', 'Иванова Майя',
            'Иванова Варвара', 'Иванова Александра', 'Иванова Валерия', 'Измайлова Ева', 'Ильин Илья', 'Казаков Евгений', 'Калачев Владислав',
            'Калинин Дмитрий', 'Калинина Алиса', 'Колесникова Александра', 'Комарова Александра', 'Константинов Мирон', 'Королев Василий',
            'Королева Варвара', 'Короткова Виктория', 'Котова Мирослава', 'Крючкова Алиса', 'Кудрявцева Анна', 'Кузнецов Тимур', 'Кузнецова Надежда',
            'Кузьмин Сергей', 'Куликов Михаил', 'Куликова Мария', 'Лазарев Степан', 'Лапина Мария', 'Ларионов Кирилл', 'Лебедев Даниил',
            'Лебедева Дарья', 'Леонтьев Максим', 'Лукин Кирилл', 'Лыков Георгий', 'Макаров Михаил', 'Макаров Максим', 'Макарова Вероника',
            'Малышев Николай', 'Маркова Виктория', 'Мартынова Анна', 'Маслов Максим', 'Матвеева Ксения', 'Матвеева Мария', 'Матвеева София',
            'Медведев Кирилл', 'Мещерякова Елизавета', 'Минаева Алиса', 'Миронова Елена', 'Моисеев Матвей', 'Моисеева Дарья', 'Молчанов Виктор',
            'Молчанова Ксения', 'Морозов Лука', 'Муравьева Александра', 'Некрасов Артём', 'Никитина София', 'Никифорова Кристина', 'Николаева Арина',
            'Николаева Ева', 'Никонова Мирослава', 'Новиков Тимофей', 'Орлов Михаил', 'Орлова Екатерина', 'Орлова Александра', 'Павлов Степан',
            'Панов Тимур', 'Пантелеев Илья', 'Петрова Дарина', 'Петрова Василиса', 'Петрова Василиса', 'Платонова Ульяна', 'Плотникова София',
            'Поляков Николай', 'Пономарев Никита', 'Пономарева Вера', 'Попова Марина', 'Ракова Кристина', 'Рубцова Кира', 'Румянцев Максим',
            'Русакова Алиса', 'Самсонов Тимофей', 'Севастьянова Алиса', 'Селиванова Алиса', 'Семенова Анастасия', 'Серов Александр', 'Симонов Кирилл',
            'Смирнов Георгий', 'Смирнов Павел', 'Соколова Виктория', 'Соколова Анна', 'Соловьев Адам', 'Соловьев Илья', 'Степанов Юрий',
            'Степанова Мария', 'Степанова Полина', 'Степанова Валерия', 'Степанова Анна', 'Суслова Алиса', 'Суханова Ангелина', 'Сычев Артур',
            'Тарасов Виктор', 'Тарасова Вера', 'Терентьев Игорь', 'Тимофеева Алиса', 'Тимофеева Ульяна', 'Титов Николай', 'Трошин Дмитрий',
            'Ушаков Михаил', 'Ушакова Валерия', 'Федоров Ярослав', 'Федосеева Дарья', 'Федотов Артём', 'Филиппов Роман', 'Филиппов Фёдор',
            'Филиппова Мария', 'Филиппова Екатерина', 'Фокин Вадим', 'Фомин Лев', 'Фомина Алёна', 'Фролов Егор', 'Фролова Анна', 'Хохлов Платон',
            'Чернов Платон', 'Чернова Виктория', 'Чернова Анастасия', 'Шаповалов Александр', 'Шишкина Мария', 'Щербакова Дарина', 'Яковлев Артур',
            'Яковлева Яна', 'Яковлева Екатерина'];
        for ($i = 0; $i < count($names); $i++){
            $student = new Student();
            $splitted = explode(" ", $names[$i]);
            $first_name = $splitted[1];
            $last_name = $splitted[0];
            $student->setFirstName($first_name);
            $student->setLastName($last_name);
            $student->setGroupNumber($this->getGroupName($i));
            $student->setCourse(1);

            // сообщите Doctrine, что вы хотите (в итоге) сохранить Продукт (пока без запросов)
            $entityManager->persist($student);

            // действительно выполните запросы (например, запрос INSERT)
            $entityManager->flush();
        }

        return $this->redirectToRoute('home');
        //return new Response('Saved new product with id '.$student->getId());
    }

    public function getGroupName($index){
        if($index <= 25){
            return "MT-101";
        }
        elseif ($index > 25 && $index <= 50){
            return "MT-102";
        }
        elseif ($index > 50 && $index <= 75){
            return "MП-101";
        }
        elseif ($index > 75 && $index <= 100){
            return "MП-102";
        }
        elseif ($index > 100 && $index <= 125){
            return "MН-101";
        }
        elseif ($index > 125 && $index <= 150){
            return "MН-102";
        }
        elseif ($index > 150 && $index <= 175){
            return "MК-101";
        }
        elseif ($index > 175 && $index <= 200){
            return "MК-102";
        }
        return "MT-101";
    }
}
